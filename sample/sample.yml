---
#
# sample.yml
# All options are listed.
#

# The image filed manages docker image attributes.
image:
  # name: Image name. This field is required.
  name: dbyml-sample

  # tag: Image tag.
  tag: latest

  # path: Path to a directory containing Dockerfile.
  path: sample/dockerfiles

  # dockerfile: Filename of Dockerfile.
  dockerfile: Dockerfile

  # build_args: Arguments corresponding to build-args when use docker build.
  # Set key: value
  build_args:
    key1: value1
    key2: value2

  # label: Arguments corresponding to label when use docker build.
  # Use quotation when the key name includes "." such as com.test.name
  label:
    aaa: this is test
    build_info: test
    "com.test.name": test name

  # docker_host: URL to the Docker server. For example, unix:///var/run/docker.sock or tcp://127.0.0.1:1234.
  # Default to unix:/var/run/docker.sock.
  docker_host: "unix:/var/run/docker.sock"


# The build field manages messages, intermediates and options on build.
build:
  # target: Name of the build-stage to build in a multi-stage Dockerfile.
  target: ""

  # stdout: If set true, show status messages when build and push the image to stdout.
  # default: true
  stdout: true

  # no_cache: Set true not to use build cache when build the image.
  # default: false
  no_cache: false

  # remove_intermediate_container: Set true to remove intermediate containers created during build.
  # default: true
  remove_intermediate_container: true

  # force_rm: Set true to always remove intermediate containers, even after unsuccessful builds
  # default: true
  force_rm: true

  # remove_dangling: Set true to delete the image with the same name:tag as the image to be built from local before building.
  # default: false
  remove_dangling: true

  # verbose: Set true to show build settings.
  # default: true
  verbose: true


# The registry field manages the information about registry to which build image push.
registry:
  # enabled: Enable push to a registry. Set false not to push the image
  # to the registry even if the push fields are set.
  enabled: true

  # host: Registry name or ip address.
  host: "myregistry.com"

  # port: Registry port.
  port: "5000"

  # username: Registry auth username
  username: ${REGISTRY_USER}

  # password: Registry auth password
  password: ${REGISTRY_PASSWORD}

  # namespace:
  # When set the namespace, the image to be pushed to the registry will be {host}:{port}/{namespace}/{name}:{tag},
  # otherwise {host}:{port}/{name}:{tag}
  namespace: public

  # remove_local: Set true to delete the image from local after successfully push to the registry.
  remove_local: false

# The tls field manages TLS settings on connection to docker daemon.
tls:
  # enabled: Set true to enable TLS.
  enabled: false

  # ca_cert: Path to a CA certificate.
  ca_cert: ca_cert.pem

  # client_cert: Path to a client certificate.
  client_cert: cert.pem

  # client_key: Path to a client key/
  client_key: key.pem
